name: Consulting Firm React Pipeline

on:
  push:
    branches:
      - master  # Trigger this workflow when there's a push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/consulting-firm-app-ga:latest
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: 818140567777.dkr.ecr.us-west-1.amazonaws.com
        ECR_REPOSITORY: consultancyfirm/unsecure
        IMAGE_TAG: ${{ github.sha }}
        
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest   
   
    - name: Run Docker Scout Action
      uses: docker/scout-action@v1
      with:
          command: quickview,cves
          organization: ${{ secrets.DOCKER_USERNAME }}
          # token: ${{ secrets.DOCKER_SCOUT_TOKEN }}  # Make sure you have this token set in your secrets
          image: ${{ secrets.DOCKER_USERNAME }}/consulting-firm-app-ga:latest

    # - name: Run Trivy Vulnerability Scanner
    #   uses: aquasecurity/trivy-action@0.20.0
    #   with:
    #       image-ref: 'docker.io/bsmahi/consulting-firm-app-ga:${{ github.sha }}'
    #       format: 'sarif'
    #       output: 'trivy-results.sarif'    
